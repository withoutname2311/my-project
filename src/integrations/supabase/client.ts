// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

// Use environment variables if available, otherwise fall back to demo values
const SUPABASE_URL = import.meta.env.VITE_SUPABASE_URL || "https://axxquqtgbfqrorpddnxc.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = import.meta.env.VITE_SUPABASE_ANON_KEY || "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImF4eHF1cXRnYmZxcm9ycGRkbnhjIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTY1NzM3NDksImV4cCI6MjA3MjE0OTc0OX0.G1bEj3VV2cKsvrFiWMgGzELF1KrO4JVuICQZotQIB04";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
  },
  global: {
    headers: {
      'X-Client-Info': 'avira-mental-health-app',
    },
  },
  realtime: {
    params: {
      eventsPerSecond: 2,
    },
  }
});

// Add connection error handling
supabase.auth.onAuthStateChange((event, session) => {
  if (event === 'SIGNED_OUT') {
    // Clear any cached data on sign out
    localStorage.removeItem('supabase.auth.token');
  }
  
  if (event === 'TOKEN_REFRESHED') {
    console.log('Supabase auth token refreshed successfully');
  }
});

// Test connection on initialization
const testConnection = async () => {
  try {
    const { data, error } = await supabase.from('profiles').select('count').limit(1);
    if (error && error.message.includes('Failed to fetch')) {
      console.warn('Supabase connection test failed - running in offline mode');
    }
  } catch (err) {
    console.warn('Supabase connection test failed - running in offline mode');
  }
};

// Run connection test after a short delay to avoid blocking app initialization
setTimeout(testConnection, 1000);